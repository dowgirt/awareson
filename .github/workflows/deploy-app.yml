name: Build & Publish App

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'

  workflow_dispatch:

env:
  ACR_SERVER_NAME: acrportfoliodev
  APP_SERVICE_NAME: app-portfolio-dev
  RESOURCE_GROUP: portfolio-dev-plc-rg
  KEYVAULT_NAME: kv-portfolio-dev
  DB_NAME: db1
  DB_SERVER: sql-portfolio-dev.database.windows.net
  IMAGE_NAME: myapp
  IMAGE_TAG: ${{ github.sha }}

jobs:
  # db-test:
  #   runs-on: ubuntu-latest
  #   environment: dev
  #   env:
  #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  #     ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  #     ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  #   steps:
  #     - uses: actions/checkout@v3    
  #     - name: Azure Login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: Install mssql package locally
  #       run: npm install mssql
  #     - name: Get DB secrets from Key Vault
  #       uses: azure/get-keyvault-secrets@v1
  #       with:
  #           keyvault: ${{ env.KEYVAULT_NAME }}
  #           secrets: 'sql-server-admin-username, sql-server-admin-password'

  #     - name: Run DB connection test
  #       run: |
  #         bash scripts/test-db-connection.sh
  #       env: 
  #         DB_USER: ${{ env.sql-server-admin-username }}
  #         DB_PASSWORD: ${{ env.sql-server-admin-password }}
  #         DB_SERVER: ${{ env.DB_SERVER }}
  #         DB_NAME: ${{ env.DB_NAME }}
  sast:
    name: Validate code
    uses: dowgirt/course-actions/.github/workflows/sast-validation-semgrep.yaml@solution-security
    permissions:
      contents: write
#    needs: [db-test]
    with:
      rules: "p/javascript"
      upload-artifact: true
      upload-release-assets: true
      release-tag: ${{ github.sha }}
      upload-results-github-security: false
  sca:
    name: Validate dependencies
    uses: dowgirt/course-actions/.github/workflows/sca-validation-trivy.yaml@solution-security
    permissions:
      contents: write
#    needs: [check]
    with:
      exit-code: 1 # fail the job if issues are found
      severity: HIGH,CRITICAL
      ignore-unfixed: true
      format: sarif
      upload-artifact: true
      upload-release-assets: true
      release-tag: ${{ github.sha }}
      upload-results-github-security: false

  build-push:
    runs-on: ubuntu-latest
    environment: dev
    needs: sast
    steps:
      - uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: az acr login --name ${{ env.ACR_SERVER_NAME }}

      - name: Build Docker image
        run: docker build -t ${{ env.ACR_SERVER_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ./app

      - name: Push Docker image to ACR
        run: docker push ${{ env.ACR_SERVER_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev
    needs: build-push
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_SERVICE_NAME }}
          images: ${{ env.ACR_SERVER_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          resource-group-name: ${{ env.RESOURCE_GROUP }}
