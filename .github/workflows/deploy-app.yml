name: Build & Publish App

on:
  workflow_dispatch:

env:
  ACR_SERVER_NAME: acrawaresondev
  APP_SERVICE_NAME: app-awareson-dev
  RESOURCE_GROUP: awareson-dev-plc-rg
  KEYVAULT_NAME: kv-awareson-dev
  DB_NAME: db1
  DB_SERVER: sql-awareson-dev.database.windows.net
  IMAGE_NAME: myapp
  IMAGE_TAG: ${{ github.sha }}

jobs:
  db-test:
    runs-on: ubuntu-latest
    environment: dev
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - uses: actions/checkout@v3    
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install mssql package locally
        run: npm install mssql
      - name: Get DB secrets from Key Vault
        uses: azure/get-keyvault-secrets@v1
        with:
            keyvault: ${{ env.KEYVAULT_NAME }}
            secrets: 'sql-server-admin-username, sql-server-admin-password'


      - name: Install sqlcmd on Ubuntu
        run: |
          curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl -sSL https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> $GITHUB_ENV

      - name: Run DB connection test
        run: |
          export PATH="$PATH:/opt/mssql-tools/bin"
          bash scripts/test-db-connection.sh
        env: 
          DB_USER: ${{ env.sql-server-admin-username }}
          DB_PASSWORD: ${{ env.sql-server-admin-password }}
          DB_SERVER: ${{ env.DB_SERVER }}
          DB_NAME: ${{ env.DB_NAME }}


  build-push:
    runs-on: ubuntu-latest
    environment: dev
    needs: db-test
    steps:
      - uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: az acr login --name ${{ env.ACR_SERVER_NAME }}

      - name: Build Docker image
        run: docker build -t ${{ env.ACR_SERVER_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ./app

      - name: Push Docker image to ACR
        run: docker push ${{ env.ACR_SERVER_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev
    needs: build-push
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_SERVICE_NAME }}
          images: ${{ env.ACR_SERVER_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          resource-group-name: ${{ env.RESOURCE_GROUP }}