name: Build and Deploy to Azure App Service

on:
#   push:
#     branches:
#       - main

  workflow_dispatch:
env:
  ACR_SERVER_NAME: acrawaresondev
  APP_SERVICE_NAME: app-awareson-dev
  RESOURCE_GROUP: awareson-dev-plc-rg
  KEYVAULT_NAME: kv-awareson-dev
  DB_NAME: db1
  DB_SERVER: sql-awareson-dev.database.windows.net

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    environment:
      name: dev 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install mssql package globally
        run: npm install -g mssql


      - name: Get secrets from Azure Key Vault
        id: get-secrets
        run: |
            echo "DB_USER=$(az keyvault secret show --vault-name ${{ env.KEYVAULT_NAME }} --name sql-server-admin-username --query value -o tsv)" >> $GITHUB_ENV
            echo "DB_PASSWORD=$(az keyvault secret show --vault-name ${{ env.KEYVAULT_NAME }}  --name sql-server-admin-password --query value -o tsv)" >> $GITHUB_ENV
      - name: Run DB connection test
        run: |
            node -e "
            const sql = require('mssql');
            (async () => {
            try {
                const config = {
                user: process.env.DB_USER,
                password: process.env.DB_PASSWORD,
                server: process.env.DB_SERVER,
                database: process.env.DB_NAME,
                options: { encrypt: true }
                };
                const pool = await sql.connect(config);
                console.log('DB connection successful');
                await pool.close();
                process.exit(0);
            } catch (err) {
                console.error('DB connection failed:', err);
                process.exit(1);
            }
            })();
            "   

      - name: Set image tag to commit SHA
        id: vars
        run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Log in to ACR
        run: |
          az acr login --name ${{ env.ACR_SERVER_NAME }}

      - name: Build Docker image
        run: |
          docker build -t ${{ env.ACR_SERVER_NAME }}.azurecr.io/myapp:${{ env.IMAGE_TAG }} ./app
  
      - name: Push Docker image to ACR
        run: |
          docker push ${{ env.ACR_SERVER_NAME }}.azurecr.io/myapp:${{ env.IMAGE_TAG }}
  
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_SERVICE_NAME }}
          images: ${{ env.ACR_SERVER_NAME }}.azurecr.io/myapp:${{ env.IMAGE_TAG }}
          resource-group-name: ${{ env.RESOURCE_GROUP }}
